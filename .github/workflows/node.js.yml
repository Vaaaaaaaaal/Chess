name: CI/CD Pipeline

on:
  push:
    branches: "*"
    tags: "*"
  pull_request:
    branches: "*"
  release:
    types:
      - published
      - unpublished
      - created
      - prereleased
      - released
      - edited
      - deleted

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies
        working-directory: ./Backend
        run: npm ci

      - name: Run ESLint
        working-directory: ./Backend
        run: npm run lint

      - name: Type check
        working-directory: ./Backend
        run: npm run typecheck

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./Backend
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/chess-backend:latest

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies
        working-directory: ./Frontend
        run: npm ci

      - name: Run ESLint
        working-directory: ./Frontend
        run: npm run lint

      - name: Type check
        working-directory: ./Frontend
        run: npm run typecheck

  deploy:
    needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest
    if: github.event_name == 'create' && github.event.ref_type == 'tag'
    steps:
      - name: Deploy Backend to Render
        run: |
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_BACKEND }}

      - name: Deploy Frontend to Render
        run: |
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_FRONTEND }}
